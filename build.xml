<?xml version="1.0" encoding="UTF-8"?>

<project name="intern" default="build">
    <property environment="env" />

    <target name="build"
        depends="prepare,lint" />

    <target name="build-parallel"
        depends="prepare,lint,tools-parallel,phpunit,phpcb" />
    
    <target name="metrics" depends="phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb" />

    <target name="tools-parallel"
        description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend" />
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd" />
            <antcall target="phpcs-ci" />
            <antcall target="phploc" />
            <antcall target="phpdox" />
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build"/>
    </target>

    <target name="prepare" depends="clean"
         description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdox"/>
        <mkdir dir="${basedir}/build/rpm" />
    </target>

    <target name="lint">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}">
                <include name="**/*.php" />
                <modified />
            </fileset>

<!--            <fileset dir="${basedir}/tests">
                <include name="**/*.php" />
                <modified />
            </fileset>-->
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="pdepend"
        description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpmd"
        description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}" />
            <arg value="text" />
            <arg value="/etc/ess/phpmd.xml" />
        </exec>
    </target>

    <target name="phpmd-ci"
        description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}" />
            <arg value="xml" />
            <arg value="/etc/ess/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcs"
        description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=/etc/ess/phpcs.xml" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcs-ci"
        description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=/etc/ess/phpcs.xml" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpdox"
        description="Generate API documentation using phpDox">
        <exec executable="phpdox"/>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
<!--        <exec executable="phpunit" failonerror="true"/>-->
    </target>

    <target name="phpcb"
    description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <tarfileset id="intern-tarball" dir="${basedir}" prefix="intern/">
        <exclude name=".hg/**" />
        <exclude name="build/**" />
        <exclude name="build.xml" />
        <exclude name="intern.spec" />
        <exclude name="phpdox.xml" />
        <exclude name="cache.properties" />
    </tarfileset>

    <target name="tarball" depends="build" description="Tar it up">
        <tar destfile="${basedir}/build/intern-${RELVERSION}.tar.bz2" compression="bzip2">
            <tarfileset refid="intern-tarball" />
        </tar>
    </target>

    <target name="rpm" depends="tarball" description="Build an RPM">
        <exec executable="rpmbuild">
            <arg value="--define" />
            <arg value="_topdir ${basedir}/build/rpm" />
            <arg value="--define" />
            <arg value="_rpmdir %{_topdir}" />
            <arg value="--define" />
            <arg value="_srcrpmdir %{_topdir}" />
            <arg value="--define" />
            <arg value="_rpmfilename %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" />
            <arg value="--define" />
            <arg value="_specdir %{_topdir}" />
            <arg value="--define" />
            <arg value="_sourcedir ${basedir}/build" />
            <arg value="--define" />
            <arg value="vendor ESS" />
            <arg value="--define" />
            <arg value="version ${RELVERSION}" />
            <arg value="--define" />
            <arg value="_signature gpg" />
            <arg value="--define" />
            <arg value="_gpg_path /etc/ess/gnupg" />
            <arg value="--define" />
            <arg value="_gpg_name Electronic Student Services" />
            <arg value="--define" />
            <arg value="_gpgbin /usr/bin/gpg" />            
            <arg value="--define" />
            <arg value="_binaries_in_noarch_packages_terminate_build 0" />
            <arg value="-bb" />
            <arg value="--sign" />
            <arg path="${basedir}/intern.spec" />
        </exec>
    </target>
</project>
