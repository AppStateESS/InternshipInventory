{"version":3,"sources":["javascript/emergencyContact/EmgContactList.jsx"],"names":[],"mappings":"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","file":"javascript/emergencyContact/EmgContactList.jsx","sourcesContent":["// !!The internshipId variable is important!!\n\n// It's being used as a global variable from the head.js where this file is located\n// to determine which internship is loaded so it can grab the emergency contacts.\n\n\"use strict\";\n\n/****************************\n * Modal Form\n * This uses ReactBoostrap!!\n ****************************/\nvar ModalForm = React.createClass({\n    getInitialState: function() {\n        return {showError: false};\n    },\n    handleSave: function() {\n        if (this.refs.emg_name.value == '' || this.refs.emg_relation.value == '' ||  this.refs.emg_phone.value == '') {\n            // If any field is left empty, it will display an error message in the modal form.\n            this.setState({showError: true});\n            return;\n        }else{\n            this.setState({showError: false});\n        }\n\n        var contact = {id: this.props.id,\n                       name: this.refs.emg_name.value,\n                       relation: this.refs.emg_relation.value,\n                       phone: this.refs.emg_phone.value,\n                       email:this.refs.emg_email.value};\n\n        // Call parent's save handler\n        this.props.handleSaveContact(contact);\n    },\n    render: function() {\n        var warning = <div id=\"warningError\" className=\"alert alert-warning alert-dismissable\" role=\"alert\">\n                        <button type=\"button\"  className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        <strong>Warning!</strong> Please input a value into any empty text fields.\n                      </div>\n\n        return (\n            <ReactBootstrap.Modal show={this.props.show} onHide={this.props.hide} backdrop='static'>\n                <ReactBootstrap.Modal.Header closeButton>\n                  <ReactBootstrap.Modal.Title>Emergency Contact</ReactBootstrap.Modal.Title>\n                  {this.state.showError ? warning : null}\n                </ReactBootstrap.Modal.Header>\n                <ReactBootstrap.Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group\">\n                            <label className=\"col-lg-3 control-label\">Name</label>\n                            <div className=\"col-lg-9\"><input  type=\"text\" className=\"form-control\" id=\"emg-name\" ref=\"emg_name\" defaultValue={this.props.name} /></div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-lg-3 control-label\">Relation</label>\n                            <div className=\"col-lg-9\"><input  type=\"text\" className=\"form-control\" id=\"emg-relation\" ref=\"emg_relation\" defaultValue={this.props.relation} /></div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-lg-3 control-label\">Phone</label>\n                            <div className=\"col-lg-9\"><input  type=\"text\" className=\"form-control\" id=\"emg-phone\" ref=\"emg_phone\" defaultValue={this.props.phone} /></div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-lg-3 control-label\">Email</label>\n                            <div className=\"col-lg-9\"><input  type=\"text\" className=\"form-control\" id=\"emg-email\" ref=\"emg_email\" defaultValue={this.props.email} /></div>\n                        </div>\n                    </form>\n                </ReactBootstrap.Modal.Body>\n                <ReactBootstrap.Modal.Footer>\n                    <ReactBootstrap.Button onClick={this.handleSave}>Save</ReactBootstrap.Button>\n                    <ReactBootstrap.Button onClick={this.props.hide}>Close</ReactBootstrap.Button>\n                </ReactBootstrap.Modal.Footer>\n            </ReactBootstrap.Modal>\n        );\n    }\n});\n\n\n/*********************\n * Emergency Contact *\n *********************/\nvar EmergencyContact = React.createClass({\n    getInitialState: function() {\n        return {showModal: false};\n    },\n    closeModal: function() {\n        this.setState({ showModal: false });\n    },\n    openModal: function() {\n        this.setState({ showModal: true });\n    },\n    handleSaveContact: function(contact){\n        this.closeModal(); // Close the modal box\n        this.props.handleSave(contact); // Call parent's handleSave method\n    },\n    handleRemove: function(event) {\n        // Prevents the modal trigger from occuring when presing\n        // the remove button.\n        event.stopPropagation();\n        this.props.onContactRemove(this.props.id);\n    },\n    render: function() {\n        var contactInfo = <span>\n                            {this.props.name} {'\\u2022'} {this.props.relation} {'\\u2022'} {this.props.phone} {'\\u2022'} {this.props.email}\n                          </span>\n        return (\n                <li className=\"list-group-item\" onClick={this.openModal} style={{cursor: \"pointer\"}}>\n                    {contactInfo}\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.handleRemove}><span aria-hidden=\"true\">&times;</span></button>\n\n                    <ModalForm show={this.state.showModal} hide={this.closeModal} edit={true} handleSaveContact={this.handleSaveContact}{...this.props} />\n\n                </li>\n        );\n    }\n});\n\nvar EmergencyContactList = React.createClass({\n    getInitialState: function() {\n        return {\n            emgConData: null,\n            showAddModal: false\n        };\n    },\n    componentWillMount: function(){\n        this.getData();\n    },\n    closeAddModal: function() {\n        this.setState({ showAddModal: false });\n    },\n    openAddModal: function() {\n        this.setState({ showAddModal: true });\n    },\n    handleNewContact: function(contact){\n        this.closeAddModal(); // Close the modal box\n        this.handleSave(contact); // Call parent's handleSave method\n    },\n    getData: function(){\n        // Grabs the emergency contact data\n        $.ajax({\n            url: 'index.php?module=intern&action=emergencyContactRest&internshipId='+internshipId,\n            type: 'GET',\n            dataType: 'json',\n            success: function(data) {\n                this.setState({emgConData: data});\n            }.bind(this),\n            error: function(xhr, status, err) {\n                alert(\"Failed to load emergency contact data.\")\n                console.error(this.props.url, status, err.toString());\n            }.bind(this)\n        });\n    },\n    handleSave: function(contact) {\n        // Event handler to save the comments.\n\n        // Updates or adds a new emergency contact\n        $.ajax({\n            url: 'index.php?module=intern&action=emergencyContactRest',\n            type: 'POST',\n            dataType: 'json',\n            data: {internshipId: internshipId,\n                   contactId: contact.id,\n                   emergency_contact_name: contact.name,\n                   emergency_contact_relation: contact.relation,\n                   emergency_contact_phone: contact.phone,\n                   emergency_contact_email: contact.email\n               },\n            success: function(data) {\n                // Grabs the new data\n                this.setState({emgConData: data});\n            }.bind(this),\n            error: function(xhr, status, err) {\n                alert(\"Failed to save emergency contact data.\")\n                console.error(this.props.url, status, err.toString());\n            }.bind(this)\n        });\n    },\n    onContactRemove: function(contactId){\n        // Deletes the emergency contact.\n        $.ajax({\n            url: 'index.php?module=intern&action=emergencyContactRest&contactId='+contactId+'&internshipId='+internshipId,\n            type: 'DELETE',\n            dataType: 'json',\n            success: function(data) {\n                this.setState({emgConData: data});\n            }.bind(this),\n            error: function(xhr, status, err) {\n                alert(\"Failed to DELETE data.\")\n                console.error(this.props.url, status, err.toString());\n            }.bind(this)\n        });\n    },\n    render: function() {\n        if(this.state.emgConData != null){\n            var eData = this.state.emgConData.map(function (conData) {\n                return (\n\n                        <EmergencyContact key={conData.id}\n                                       id={conData.id}\n                                       name={conData.name}\n                                       relation={conData.relation}\n                                       phone={conData.phone}\n                                       email={conData.email}\n                                       handleSave={this.handleSave}\n                                       onContactRemove={this.onContactRemove}\n                                       getData={this.getData} />\n                    );\n            }.bind(this));\n\n        }else{\n            var eData = <p className=\"text-muted\"><i className=\"fa fa-spinner fa-2x fa-spin\"></i> Loading Emergency Contacts...</p>;\n        }\n\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {eData}\n                </ul>\n                <div className=\"row\">\n                    <div className=\"col-lg-12 col-lg-offset-9\">\n                        <div className=\"form-group\">\n                            <button type=\"button\" className=\"btn btn-default\" onClick={this.openAddModal}><i className=\"fa fa-plus\"></i> Add Contact</button>\n\n                            <ModalForm show={this.state.showAddModal} hide={this.closeAddModal} edit={false} handleSaveContact={this.handleNewContact} id={-1}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\n\nReactDOM.render(\n    <EmergencyContactList />,\n    document.getElementById('emergency-contact-list')\n);\n"]}